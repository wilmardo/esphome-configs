---
<<: !include _common-esphome.yml
esp8266:
  board: d1_mini

substitutions:
  devicename: tv_remote
  wifi_ip: 192.168.1.52

# Modules setup
remote_transmitter:
  pin:
    number: D7
  carrier_duty_percent: 50%

globals:
  # When above treshold TV is in ON state
  - id: threshold
    type: float
    # 0.025A: idle consumption
    # 0.029A: powered on
    initial_value: '0.025'

# CT Clamp sensor to check if the TV is really on
sensor:
  - platform: ct_clamp
    sensor: adc_sensor
    id: tv_clamp
    update_interval: 1s
    accuracy_decimals: 4
    sample_duration: 900ms
    internal: true
    # debounce
    filters:
      - median:
          window_size: 7
          send_every: 4
          send_first_at: 3

  - platform: adc
    pin: A0
    id: adc_sensor
    internal: true

switch:
  # TV Power Button with state from CT Clamp
  - platform: template
    name: TV Power Button
    icon: "mdi:television"
    # state from CT clamp
    lambda: |-
      if (id(tv_clamp).state > id(threshold)) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      if:
        # Only turn on when off
        condition:
          lambda: 'return id(tv_clamp).state < id(threshold);'
        then:
          - remote_transmitter.transmit_samsung:
              data: 0xE0E040BF
              repeat:
                times: 3
                wait_time: 200ms
    turn_off_action:
      if:
        # Only turn off when on
        condition:
          lambda: 'return id(tv_clamp).state > id(threshold);'
        then:
          - remote_transmitter.transmit_samsung:
              data: 0xE0E040BF
              repeat:
                times: 3
                wait_time: 200ms

  # TV Source button
  - platform: template
    name: TV Source Button
    icon: "mdi:television-guide"
    turn_on_action:
      - remote_transmitter.transmit_samsung:
          data: 0xE0E0807F
